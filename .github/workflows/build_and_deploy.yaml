name: Build and push private-website

on:
  push:
    branches:
      - 'main'

jobs:
  building-private-website:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Checkout theme repository
        uses: actions/checkout@v3
        with:
          repository: Track3/hermit
          path: $GITHUB_WORKSPACE/themes/hermit

      - name: Replace variables
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: 'Â¤{'
          tokenSuffix: '}'
          files: '["**/config.yaml"]'
        env:
          PROJECT_OWNER_EMAIL: ${{ secrets.PROJECT_OWNER_EMAIL }}
          PROJECT_OWNER_NAME: ${{ secrets.PROJECT_OWNER_NAME }}
          PROJECT_OWNER_USERNAME: ${{ secrets.PROJECT_OWNER_USERNAME }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}

      - uses: kelvintaywl/action-jsonresume-export@v1
        name: Export resume as HTML
        with:
          theme: macchiato
          resume_filepath: resume.json
          # modifies the index.html in-place
          output_filepath: $GITHUB_WORKSPACE/content/resume/index.html

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.91.2'
          # extended: true

      - name: Build
        run: hugo --minify

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './public'
          production-branch: main
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}











      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push resume-stage
        id: docker_build_resume_stage
        uses: docker/build-push-action@v2
        with:
          context: ./
          target: resume-stage
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}:resume-build-stage
          cache-from: type=registry,ref=${{ env.IMAGE }}:resume-build-cache
          cache-to: type=registry,ref=${{ env.IMAGE }}:resume-build-cache,mode=max
        
      - name: Build and push hugo-stage
        id: docker_build_hugo_stage
        uses: docker/build-push-action@v2
        with:
          context: ./
          target: hugo-stage
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}:hugo-build-stage
          cache-from: type=registry,ref=${{ env.IMAGE }}:hugo-build-cache
          cache-to: type=registry,ref=${{ env.IMAGE }}:hugo-build-cache,mode=max

      - name: Build and push final-stage
        id: docker_build_final_stage
        uses: docker/build-push-action@v2
        with:
          context: ./
          target: final-stage
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}:${{ steps.generate_tag.outputs.BUILD_ID }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:build-cache
          cache-to: type=registry,ref=${{ env.IMAGE }}:build-cache,mode=max

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE }}:${{ steps.generate_tag.outputs.BUILD_ID }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
