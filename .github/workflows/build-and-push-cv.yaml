name: Build and push CV 
 
on:
  push:
    paths:
      - 'resume/resume.json'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # - name: Replace variables
      #   uses: cschleiden/replace-tokens@v1
      #   with:
      #     tokenPrefix: 'Â¤{'
      #     tokenSuffix: '}'
      #     files: '["**/config.yaml","**/resume.json"]'
      #   env:
      #     PROJECT_OWNER_EMAIL: ${{ secrets.PROJECT_OWNER_EMAIL }}
      #     PROJECT_OWNER_PHONE:  ${{ secrets.PROJECT_OWNER_PHONE }}
      #     ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}

      - uses: Devleaps/jsonresume-generator@v1
        id: jsonresume-html-generator
        with:
          action: render
          file: resume.json
          folder: resume/
          output-type: html
          theme-local: false
          theme-name: jsonresume-theme-reactive

      - name: Moving resume.html
        run: |
          mkdir -p static/cv
          mv -f resume/resume.html static/cv/index.html

      - uses: Devleaps/jsonresume-generator@v1
        id: jsonresume-pdf-generator
        with:
          action: render
          file: resume.json
          folder: resume/
          output-type: pdf
          theme-local: false
          theme-name: jsonresume-theme-reactive

      - name: Moving resume.pdf
        run: |
          mkdir -p static/cv
          mv -f resume/resume.pdf static/cv/Zoltan_Horvath_CV.pdf

      - name: Commit published resume files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [ -n "$(git status --porcelain static/cv/)" ]; then
            git add static/cv/
            git commit -m "chore(static/cv): update CV files"
            echo "exit_code=0" >> $GITHUB_OUTPUT
          else
            echo "exit_code=1" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        if: steps.commit.outputs.exit_code == 0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
