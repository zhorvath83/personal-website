name: Build private-website docker image

on:
  workflow_dispatch:

jobs:
  building-private-website:
    runs-on: ubuntu-latest
    env:
        IMAGE: ghcr.io/${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Checkout theme repository
        uses: actions/checkout@v3
        with:
          repository: Track3/hermit
          path: themes/hermit

      - name: Determine new image Tag
        id: generate_tag
        run: |
            vnprefix=$(grep "nginxinc/nginx-unprivileged" Dockerfile | cut -d':' -f 2 | cut -d' ' -f 1 | cut -d'-' -f 1 )
            vnsuffix=${{ github.run_number }}
            echo "::set-output name=BUILD_ID::${vnprefix}.${vnsuffix}"

      # - name: Replace variables
      #   uses: cschleiden/replace-tokens@v1
      #   with:
      #     tokenPrefix: 'Â¤{'
      #     tokenSuffix: '}'
      #     files: '["**/config.yaml","**/resume.json"]'
      #   env:
      #     PROJECT_OWNER_EMAIL: ${{ secrets.PROJECT_OWNER_EMAIL }}
      #     PROJECT_OWNER_PHONE:  ${{ secrets.PROJECT_OWNER_PHONE }}
      #     ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push resume-stage
        id: docker_build_resume_stage
        uses: docker/build-push-action@v2
        with:
          context: ./
          target: resume-stage
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}:resume-build-stage
          cache-from: type=registry,ref=${{ env.IMAGE }}:resume-build-cache
          cache-to: type=registry,ref=${{ env.IMAGE }}:resume-build-cache,mode=max
        
      - name: Build and push hugo-stage
        id: docker_build_hugo_stage
        uses: docker/build-push-action@v2
        with:
          context: ./
          target: hugo-stage
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}:hugo-build-stage
          cache-from: type=registry,ref=${{ env.IMAGE }}:hugo-build-cache
          cache-to: type=registry,ref=${{ env.IMAGE }}:hugo-build-cache,mode=max

      - name: Build and push final-stage
        id: docker_build_final_stage
        uses: docker/build-push-action@v2
        with:
          context: ./
          target: final-stage
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE }}:${{ steps.generate_tag.outputs.BUILD_ID }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:build-cache
          cache-to: type=registry,ref=${{ env.IMAGE }}:build-cache,mode=max

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE }}:${{ steps.generate_tag.outputs.BUILD_ID }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
